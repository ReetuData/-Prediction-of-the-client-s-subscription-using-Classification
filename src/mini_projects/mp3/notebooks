{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "provenance": [],
      "mount_file_id": "1OkV-X_zawu-vHfUgtjeoRadJA-FcepY4",
      "authorship_tag": "ABX9TyN4O4TEBH2i2wViJSW/HwLt",
      "include_colab_link": true
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/ReetuData/-Prediction-of-the-client-s-subscription-using-Classification/blob/main/src/mini_projects/mp3/notebooks\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "## Import Libraries"
      ],
      "metadata": {
        "id": "HXgmZ4-9w5r6"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "import pandas as pd"
      ],
      "metadata": {
        "id": "v273_vaqwiZf"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "## Load datasets"
      ],
      "metadata": {
        "id": "sZIDQAHix2zz"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "# define function to read csv files\n",
        "\n",
        "def read_csv_files(file_path):\n",
        "    \"\"\"\n",
        "    Read a CSV file into a Pandas DataFrame and display the first few rows.\n",
        "\n",
        "    Args:\n",
        "        file_path (str): The path to the CSV file.\n",
        "           Returns:\n",
        "        pd.DataFrame: The DataFrame containing the CSV data.\n",
        "    \"\"\"\n",
        "    try:\n",
        "        # Read the CSV file into a Pandas DataFrame\n",
        "        df = pd.read_csv(file_path)\n",
        "\n",
        "        # Return the DataFrame\n",
        "        return df\n",
        "    except FileNotFoundError:\n",
        "        print(f\"File not found: {file_path}\")\n",
        "        return None"
      ],
      "metadata": {
        "id": "vNEmPxxfHGEL"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "# Load clinical file\n",
        "file_c = '/content/clinical.csv'\n",
        "\n",
        "# Read the CSV file into a Pandas DataFrame\n",
        "clinical_df = read_csv_files(file_c)\n",
        "\n",
        "# Display the first few rows of the DataFrame\n",
        "clinical_df.head(5)\n",
        "\n",
        "# print colunm's names\n",
        "clinical_df.columns"
      ],
      "metadata": {
        "id": "vQXvvBC8Hva_",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "40ca1225-144a-4857-8d40-d7d7995641dc"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "Index(['ID', 'Outcome', 'Survival.Months', 'Age', 'Grade', 'Num.Primaries',\n",
              "       'T', 'N', 'M', 'Radiation', 'Stage', 'Primary.Site', 'Histology',\n",
              "       'Tumor.Size', 'Num.Mutated.Genes', 'Num.Mutations'],\n",
              "      dtype='object')"
            ]
          },
          "metadata": {},
          "execution_count": 3
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#Load genomics file\n",
        "file_g = '/content/genomics.csv'\n",
        "\n",
        "# Read the CSV file into a Pandas DataFrame\n",
        "genomics_df = read_csv_files(file_g)\n",
        "\n",
        "# Display the first few rows of the DataFrame\n",
        "genomics_df.head(5)\n",
        "\n",
        "# print colunm's names\n",
        "genomics_df.columns"
      ],
      "metadata": {
        "id": "JgqwgfaGLBbd"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "## Join the tables and drop the duplicate columns"
      ],
      "metadata": {
        "id": "C18ixsN5a2P0"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "cl_gn = clinical_df + genomics_df"
      ],
      "metadata": {
        "id": "DzaSn0Slehr9"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "# Perform the join based on the 'ID' column\n",
        "\n",
        "cl_gn = clinical_df.merge(genomics_df, on='ID', how='inner', suffixes=('', '_drop'))\n",
        "\n",
        "#Drop the duplicate columns\n",
        "cl_gn.drop([col for col in cl_gn.columns if 'drop' in col], axis=1, inplace=True)\n",
        "\n",
        "# Display the merged DataFrame\n",
        "cl_gn.head(5)"
      ],
      "metadata": {
        "id": "BP2tZUYMaMrM",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 399
        },
        "outputId": "4ecf861e-6fca-4cd3-d343-695857b24d05"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "   ID Outcome  Survival.Months  Age  Grade  Num.Primaries    T    N   M  \\\n",
              "0   1   Alive              9.0   67      4              0  UNK  2.0 NaN   \n",
              "1   1   Alive              9.0   67      4              0  UNK  2.0 NaN   \n",
              "2   1   Alive              9.0   67      4              0  UNK  2.0 NaN   \n",
              "3   1   Alive              9.0   67      4              0  UNK  2.0 NaN   \n",
              "4   1   Alive              9.0   67      4              0  UNK  2.0 NaN   \n",
              "\n",
              "   Radiation Stage     Primary.Site                Histology  Tumor.Size  \\\n",
              "0          0    IV  Left Lower Lobe  Squamous cell carcinoma         1.4   \n",
              "1          0    IV  Left Lower Lobe  Squamous cell carcinoma         1.4   \n",
              "2          0    IV  Left Lower Lobe  Squamous cell carcinoma         1.4   \n",
              "3          0    IV  Left Lower Lobe  Squamous cell carcinoma         1.4   \n",
              "4          0    IV  Left Lower Lobe  Squamous cell carcinoma         1.4   \n",
              "\n",
              "   Num.Mutated.Genes  Num.Mutations       Gene  \n",
              "0                  8              8       AKT1  \n",
              "1                  8              8      CCND2  \n",
              "2                  8              8       EGFR  \n",
              "3                  8              8      FGFR3  \n",
              "4                  8              8  KRAS_Col1  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-e17e05b0-a498-4309-8f08-2576899ed5a8\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>ID</th>\n",
              "      <th>Outcome</th>\n",
              "      <th>Survival.Months</th>\n",
              "      <th>Age</th>\n",
              "      <th>Grade</th>\n",
              "      <th>Num.Primaries</th>\n",
              "      <th>T</th>\n",
              "      <th>N</th>\n",
              "      <th>M</th>\n",
              "      <th>Radiation</th>\n",
              "      <th>Stage</th>\n",
              "      <th>Primary.Site</th>\n",
              "      <th>Histology</th>\n",
              "      <th>Tumor.Size</th>\n",
              "      <th>Num.Mutated.Genes</th>\n",
              "      <th>Num.Mutations</th>\n",
              "      <th>Gene</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>1</td>\n",
              "      <td>Alive</td>\n",
              "      <td>9.0</td>\n",
              "      <td>67</td>\n",
              "      <td>4</td>\n",
              "      <td>0</td>\n",
              "      <td>UNK</td>\n",
              "      <td>2.0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>0</td>\n",
              "      <td>IV</td>\n",
              "      <td>Left Lower Lobe</td>\n",
              "      <td>Squamous cell carcinoma</td>\n",
              "      <td>1.4</td>\n",
              "      <td>8</td>\n",
              "      <td>8</td>\n",
              "      <td>AKT1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>1</td>\n",
              "      <td>Alive</td>\n",
              "      <td>9.0</td>\n",
              "      <td>67</td>\n",
              "      <td>4</td>\n",
              "      <td>0</td>\n",
              "      <td>UNK</td>\n",
              "      <td>2.0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>0</td>\n",
              "      <td>IV</td>\n",
              "      <td>Left Lower Lobe</td>\n",
              "      <td>Squamous cell carcinoma</td>\n",
              "      <td>1.4</td>\n",
              "      <td>8</td>\n",
              "      <td>8</td>\n",
              "      <td>CCND2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>1</td>\n",
              "      <td>Alive</td>\n",
              "      <td>9.0</td>\n",
              "      <td>67</td>\n",
              "      <td>4</td>\n",
              "      <td>0</td>\n",
              "      <td>UNK</td>\n",
              "      <td>2.0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>0</td>\n",
              "      <td>IV</td>\n",
              "      <td>Left Lower Lobe</td>\n",
              "      <td>Squamous cell carcinoma</td>\n",
              "      <td>1.4</td>\n",
              "      <td>8</td>\n",
              "      <td>8</td>\n",
              "      <td>EGFR</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>1</td>\n",
              "      <td>Alive</td>\n",
              "      <td>9.0</td>\n",
              "      <td>67</td>\n",
              "      <td>4</td>\n",
              "      <td>0</td>\n",
              "      <td>UNK</td>\n",
              "      <td>2.0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>0</td>\n",
              "      <td>IV</td>\n",
              "      <td>Left Lower Lobe</td>\n",
              "      <td>Squamous cell carcinoma</td>\n",
              "      <td>1.4</td>\n",
              "      <td>8</td>\n",
              "      <td>8</td>\n",
              "      <td>FGFR3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>1</td>\n",
              "      <td>Alive</td>\n",
              "      <td>9.0</td>\n",
              "      <td>67</td>\n",
              "      <td>4</td>\n",
              "      <td>0</td>\n",
              "      <td>UNK</td>\n",
              "      <td>2.0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>0</td>\n",
              "      <td>IV</td>\n",
              "      <td>Left Lower Lobe</td>\n",
              "      <td>Squamous cell carcinoma</td>\n",
              "      <td>1.4</td>\n",
              "      <td>8</td>\n",
              "      <td>8</td>\n",
              "      <td>KRAS_Col1</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-e17e05b0-a498-4309-8f08-2576899ed5a8')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-e17e05b0-a498-4309-8f08-2576899ed5a8 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-e17e05b0-a498-4309-8f08-2576899ed5a8');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-4b13b2e1-00d0-475a-ba27-6659c8383a2f\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-4b13b2e1-00d0-475a-ba27-6659c8383a2f')\"\n",
              "            title=\"Suggest charts.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-4b13b2e1-00d0-475a-ba27-6659c8383a2f button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 6
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "## Checking columns"
      ],
      "metadata": {
        "id": "04MOe-e6klqq"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "cl_gn.columns"
      ],
      "metadata": {
        "id": "sd28Ysrekj9S",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "c909a7d5-6c0f-496e-f915-9c48e7b8ab58"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "Index(['ID', 'Outcome', 'Survival.Months', 'Age', 'Grade', 'Num.Primaries',\n",
              "       'T', 'N', 'M', 'Radiation', 'Stage', 'Primary.Site', 'Histology',\n",
              "       'Tumor.Size', 'Num.Mutated.Genes', 'Num.Mutations', 'Gene'],\n",
              "      dtype='object')"
            ]
          },
          "metadata": {},
          "execution_count": 7
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "cl_gn.info()"
      ],
      "metadata": {
        "id": "i3ezM7WMaRFF",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "78ceb72d-3209-417d-e39c-095214525be4"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "<class 'pandas.core.frame.DataFrame'>\n",
            "Int64Index: 510 entries, 0 to 509\n",
            "Data columns (total 17 columns):\n",
            " #   Column             Non-Null Count  Dtype  \n",
            "---  ------             --------------  -----  \n",
            " 0   ID                 510 non-null    int64  \n",
            " 1   Outcome            510 non-null    object \n",
            " 2   Survival.Months    510 non-null    float64\n",
            " 3   Age                510 non-null    int64  \n",
            " 4   Grade              510 non-null    int64  \n",
            " 5   Num.Primaries      510 non-null    int64  \n",
            " 6   T                  510 non-null    object \n",
            " 7   N                  330 non-null    float64\n",
            " 8   M                  249 non-null    float64\n",
            " 9   Radiation          510 non-null    int64  \n",
            " 10  Stage              510 non-null    object \n",
            " 11  Primary.Site       510 non-null    object \n",
            " 12  Histology          510 non-null    object \n",
            " 13  Tumor.Size         269 non-null    float64\n",
            " 14  Num.Mutated.Genes  510 non-null    int64  \n",
            " 15  Num.Mutations      510 non-null    int64  \n",
            " 16  Gene               510 non-null    object \n",
            "dtypes: float64(4), int64(7), object(6)\n",
            "memory usage: 71.7+ KB\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "cl_gn.shape"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "SL_qrhn942O6",
        "outputId": "16ac77e5-ddd6-4d3f-8ef3-018a1dbbf974"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "(510, 17)"
            ]
          },
          "metadata": {},
          "execution_count": 9
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "## Data Cleaning"
      ],
      "metadata": {
        "id": "vYsF0_VKbiRu"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "### 1a. Handling Missing Values:"
      ],
      "metadata": {
        "id": "GuFhqkRqbpaS"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "# Count NaN values under an entire DataFrame\n",
        "cl_gn.isna().sum().sum()"
      ],
      "metadata": {
        "id": "3XODwEpdb-oI",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "b4b1b659-8043-4af6-f6e4-e88b48f6e4c3"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "682"
            ]
          },
          "metadata": {},
          "execution_count": 10
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Initialize an empty dictionary to store missing value counts for each column\n",
        "missing_val_counts = {}\n",
        "\n",
        "# Iterate over columns and count missing values\n",
        "for column in cl_gn.columns:\n",
        "    missing_val_count = cl_gn[column].isnull().sum()\n",
        "    missing_val_counts[column] = missing_val_count\n",
        "\n",
        "# Print the missing value counts for each column\n",
        "for column, count in missing_val_counts.items():\n",
        "    #print(f\"Column '{column}' has {count} missing values.\")\n",
        "    print(f\"{column}'= {count}\")"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "-gl4cFj56Iag",
        "outputId": "34855d14-0739-43af-cb32-6431f6b5f032"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "ID'= 0\n",
            "Outcome'= 0\n",
            "Survival.Months'= 0\n",
            "Age'= 0\n",
            "Grade'= 0\n",
            "Num.Primaries'= 0\n",
            "T'= 0\n",
            "N'= 180\n",
            "M'= 261\n",
            "Radiation'= 0\n",
            "Stage'= 0\n",
            "Primary.Site'= 0\n",
            "Histology'= 0\n",
            "Tumor.Size'= 241\n",
            "Num.Mutated.Genes'= 0\n",
            "Num.Mutations'= 0\n",
            "Gene'= 0\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "### 1b. Replacing NaN with zeros in columns"
      ],
      "metadata": {
        "id": "paZtoibh8CLm"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "# Iterate over columns and replace missing values with zeros\n",
        "for column in cl_gn.columns:\n",
        "    cl_gn[column].fillna(0, inplace=True)\n",
        "\n",
        "# Print the DataFrame with replaced Value(zeros)\n",
        "cl_gn.head(5)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 399
        },
        "id": "oQ9k1XqN7-Yg",
        "outputId": "cf357593-e063-4a9d-9725-6019640608ef"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "   ID Outcome  Survival.Months  Age  Grade  Num.Primaries    T    N    M  \\\n",
              "0   1   Alive              9.0   67      4              0  UNK  2.0  0.0   \n",
              "1   1   Alive              9.0   67      4              0  UNK  2.0  0.0   \n",
              "2   1   Alive              9.0   67      4              0  UNK  2.0  0.0   \n",
              "3   1   Alive              9.0   67      4              0  UNK  2.0  0.0   \n",
              "4   1   Alive              9.0   67      4              0  UNK  2.0  0.0   \n",
              "\n",
              "   Radiation Stage     Primary.Site                Histology  Tumor.Size  \\\n",
              "0          0    IV  Left Lower Lobe  Squamous cell carcinoma         1.4   \n",
              "1          0    IV  Left Lower Lobe  Squamous cell carcinoma         1.4   \n",
              "2          0    IV  Left Lower Lobe  Squamous cell carcinoma         1.4   \n",
              "3          0    IV  Left Lower Lobe  Squamous cell carcinoma         1.4   \n",
              "4          0    IV  Left Lower Lobe  Squamous cell carcinoma         1.4   \n",
              "\n",
              "   Num.Mutated.Genes  Num.Mutations       Gene  \n",
              "0                  8              8       AKT1  \n",
              "1                  8              8      CCND2  \n",
              "2                  8              8       EGFR  \n",
              "3                  8              8      FGFR3  \n",
              "4                  8              8  KRAS_Col1  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-47a0bf47-ccc9-4d23-86df-a9dd61941bc1\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>ID</th>\n",
              "      <th>Outcome</th>\n",
              "      <th>Survival.Months</th>\n",
              "      <th>Age</th>\n",
              "      <th>Grade</th>\n",
              "      <th>Num.Primaries</th>\n",
              "      <th>T</th>\n",
              "      <th>N</th>\n",
              "      <th>M</th>\n",
              "      <th>Radiation</th>\n",
              "      <th>Stage</th>\n",
              "      <th>Primary.Site</th>\n",
              "      <th>Histology</th>\n",
              "      <th>Tumor.Size</th>\n",
              "      <th>Num.Mutated.Genes</th>\n",
              "      <th>Num.Mutations</th>\n",
              "      <th>Gene</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>1</td>\n",
              "      <td>Alive</td>\n",
              "      <td>9.0</td>\n",
              "      <td>67</td>\n",
              "      <td>4</td>\n",
              "      <td>0</td>\n",
              "      <td>UNK</td>\n",
              "      <td>2.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>IV</td>\n",
              "      <td>Left Lower Lobe</td>\n",
              "      <td>Squamous cell carcinoma</td>\n",
              "      <td>1.4</td>\n",
              "      <td>8</td>\n",
              "      <td>8</td>\n",
              "      <td>AKT1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>1</td>\n",
              "      <td>Alive</td>\n",
              "      <td>9.0</td>\n",
              "      <td>67</td>\n",
              "      <td>4</td>\n",
              "      <td>0</td>\n",
              "      <td>UNK</td>\n",
              "      <td>2.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>IV</td>\n",
              "      <td>Left Lower Lobe</td>\n",
              "      <td>Squamous cell carcinoma</td>\n",
              "      <td>1.4</td>\n",
              "      <td>8</td>\n",
              "      <td>8</td>\n",
              "      <td>CCND2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>1</td>\n",
              "      <td>Alive</td>\n",
              "      <td>9.0</td>\n",
              "      <td>67</td>\n",
              "      <td>4</td>\n",
              "      <td>0</td>\n",
              "      <td>UNK</td>\n",
              "      <td>2.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>IV</td>\n",
              "      <td>Left Lower Lobe</td>\n",
              "      <td>Squamous cell carcinoma</td>\n",
              "      <td>1.4</td>\n",
              "      <td>8</td>\n",
              "      <td>8</td>\n",
              "      <td>EGFR</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>1</td>\n",
              "      <td>Alive</td>\n",
              "      <td>9.0</td>\n",
              "      <td>67</td>\n",
              "      <td>4</td>\n",
              "      <td>0</td>\n",
              "      <td>UNK</td>\n",
              "      <td>2.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>IV</td>\n",
              "      <td>Left Lower Lobe</td>\n",
              "      <td>Squamous cell carcinoma</td>\n",
              "      <td>1.4</td>\n",
              "      <td>8</td>\n",
              "      <td>8</td>\n",
              "      <td>FGFR3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>1</td>\n",
              "      <td>Alive</td>\n",
              "      <td>9.0</td>\n",
              "      <td>67</td>\n",
              "      <td>4</td>\n",
              "      <td>0</td>\n",
              "      <td>UNK</td>\n",
              "      <td>2.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>IV</td>\n",
              "      <td>Left Lower Lobe</td>\n",
              "      <td>Squamous cell carcinoma</td>\n",
              "      <td>1.4</td>\n",
              "      <td>8</td>\n",
              "      <td>8</td>\n",
              "      <td>KRAS_Col1</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-47a0bf47-ccc9-4d23-86df-a9dd61941bc1')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-47a0bf47-ccc9-4d23-86df-a9dd61941bc1 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-47a0bf47-ccc9-4d23-86df-a9dd61941bc1');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-c1737f02-2505-47f5-bc68-2d91840f4384\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-c1737f02-2505-47f5-bc68-2d91840f4384')\"\n",
              "            title=\"Suggest charts.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-c1737f02-2505-47f5-bc68-2d91840f4384 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 12
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "cl_gn.info()"
      ],
      "metadata": {
        "id": "zWqFTHQ-gB6P",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "287dae8c-4e9b-46f4-9d9f-a15683a932fd"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "<class 'pandas.core.frame.DataFrame'>\n",
            "Int64Index: 510 entries, 0 to 509\n",
            "Data columns (total 17 columns):\n",
            " #   Column             Non-Null Count  Dtype  \n",
            "---  ------             --------------  -----  \n",
            " 0   ID                 510 non-null    int64  \n",
            " 1   Outcome            510 non-null    object \n",
            " 2   Survival.Months    510 non-null    float64\n",
            " 3   Age                510 non-null    int64  \n",
            " 4   Grade              510 non-null    int64  \n",
            " 5   Num.Primaries      510 non-null    int64  \n",
            " 6   T                  510 non-null    object \n",
            " 7   N                  510 non-null    float64\n",
            " 8   M                  510 non-null    float64\n",
            " 9   Radiation          510 non-null    int64  \n",
            " 10  Stage              510 non-null    object \n",
            " 11  Primary.Site       510 non-null    object \n",
            " 12  Histology          510 non-null    object \n",
            " 13  Tumor.Size         510 non-null    float64\n",
            " 14  Num.Mutated.Genes  510 non-null    int64  \n",
            " 15  Num.Mutations      510 non-null    int64  \n",
            " 16  Gene               510 non-null    object \n",
            "dtypes: float64(4), int64(7), object(6)\n",
            "memory usage: 71.7+ KB\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "### 2. Removing duplicates based on ID"
      ],
      "metadata": {
        "id": "bnMsvrLK7ymY"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "# Removing Duplicates\n",
        "cl_gn.drop_duplicates(subset=['ID'], keep='first', inplace=True)"
      ],
      "metadata": {
        "id": "t4UZ9MVl7y7i"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "cl_gn.head(5)"
      ],
      "metadata": {
        "id": "imtZ8z6B-rBy",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 313
        },
        "outputId": "f7af2a03-bc87-48a2-fccc-c29add1fbef6"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "    ID Outcome  Survival.Months  Age  Grade  Num.Primaries    T    N    M  \\\n",
              "0    1   Alive              9.0   67      4              0  UNK  2.0  0.0   \n",
              "8    2    Dead             19.0   73      2              0  UNK  2.0  0.0   \n",
              "10   3    Dead             13.0   72      3              0    2  2.0  0.0   \n",
              "11   4    Dead             15.0   69      9              1   1a  0.0  1.0   \n",
              "15   5    Dead             10.0   76      9              0  UNK  0.0  0.0   \n",
              "\n",
              "    Radiation Stage      Primary.Site                Histology  Tumor.Size  \\\n",
              "0           0    IV   Left Lower Lobe  Squamous cell carcinoma         1.4   \n",
              "8           5    IV  Right Upper Lobe           Adenocarcinoma         0.0   \n",
              "10          0  IIIA  Right Upper Lobe           Adenocarcinoma         1.5   \n",
              "11          0    IA  Right Upper Lobe           Adenocarcinoma         0.0   \n",
              "15          0  IIIA        Left Hilar     Large-cell carcinoma         0.0   \n",
              "\n",
              "    Num.Mutated.Genes  Num.Mutations       Gene  \n",
              "0                   8              8       AKT1  \n",
              "8                   2              2        SMO  \n",
              "10                  1              1      STK11  \n",
              "11                  4              4     CDKN2A  \n",
              "15                  3              3  KRAS_Col1  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-41308a8c-257e-452d-b4e0-099f2fd3c2ec\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>ID</th>\n",
              "      <th>Outcome</th>\n",
              "      <th>Survival.Months</th>\n",
              "      <th>Age</th>\n",
              "      <th>Grade</th>\n",
              "      <th>Num.Primaries</th>\n",
              "      <th>T</th>\n",
              "      <th>N</th>\n",
              "      <th>M</th>\n",
              "      <th>Radiation</th>\n",
              "      <th>Stage</th>\n",
              "      <th>Primary.Site</th>\n",
              "      <th>Histology</th>\n",
              "      <th>Tumor.Size</th>\n",
              "      <th>Num.Mutated.Genes</th>\n",
              "      <th>Num.Mutations</th>\n",
              "      <th>Gene</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>1</td>\n",
              "      <td>Alive</td>\n",
              "      <td>9.0</td>\n",
              "      <td>67</td>\n",
              "      <td>4</td>\n",
              "      <td>0</td>\n",
              "      <td>UNK</td>\n",
              "      <td>2.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>IV</td>\n",
              "      <td>Left Lower Lobe</td>\n",
              "      <td>Squamous cell carcinoma</td>\n",
              "      <td>1.4</td>\n",
              "      <td>8</td>\n",
              "      <td>8</td>\n",
              "      <td>AKT1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8</th>\n",
              "      <td>2</td>\n",
              "      <td>Dead</td>\n",
              "      <td>19.0</td>\n",
              "      <td>73</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>UNK</td>\n",
              "      <td>2.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>5</td>\n",
              "      <td>IV</td>\n",
              "      <td>Right Upper Lobe</td>\n",
              "      <td>Adenocarcinoma</td>\n",
              "      <td>0.0</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>SMO</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>10</th>\n",
              "      <td>3</td>\n",
              "      <td>Dead</td>\n",
              "      <td>13.0</td>\n",
              "      <td>72</td>\n",
              "      <td>3</td>\n",
              "      <td>0</td>\n",
              "      <td>2</td>\n",
              "      <td>2.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>IIIA</td>\n",
              "      <td>Right Upper Lobe</td>\n",
              "      <td>Adenocarcinoma</td>\n",
              "      <td>1.5</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>STK11</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>11</th>\n",
              "      <td>4</td>\n",
              "      <td>Dead</td>\n",
              "      <td>15.0</td>\n",
              "      <td>69</td>\n",
              "      <td>9</td>\n",
              "      <td>1</td>\n",
              "      <td>1a</td>\n",
              "      <td>0.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>0</td>\n",
              "      <td>IA</td>\n",
              "      <td>Right Upper Lobe</td>\n",
              "      <td>Adenocarcinoma</td>\n",
              "      <td>0.0</td>\n",
              "      <td>4</td>\n",
              "      <td>4</td>\n",
              "      <td>CDKN2A</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>15</th>\n",
              "      <td>5</td>\n",
              "      <td>Dead</td>\n",
              "      <td>10.0</td>\n",
              "      <td>76</td>\n",
              "      <td>9</td>\n",
              "      <td>0</td>\n",
              "      <td>UNK</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>IIIA</td>\n",
              "      <td>Left Hilar</td>\n",
              "      <td>Large-cell carcinoma</td>\n",
              "      <td>0.0</td>\n",
              "      <td>3</td>\n",
              "      <td>3</td>\n",
              "      <td>KRAS_Col1</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-41308a8c-257e-452d-b4e0-099f2fd3c2ec')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-41308a8c-257e-452d-b4e0-099f2fd3c2ec button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-41308a8c-257e-452d-b4e0-099f2fd3c2ec');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-285da494-2eef-4628-9013-037cbb730329\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-285da494-2eef-4628-9013-037cbb730329')\"\n",
              "            title=\"Suggest charts.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-285da494-2eef-4628-9013-037cbb730329 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 15
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "cl_gn.shape"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "95QaaUPNGHBp",
        "outputId": "b45ebff0-0e7b-4ae5-919a-b7be1d5d2083"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "(184, 17)"
            ]
          },
          "metadata": {},
          "execution_count": 16
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#print(Cl_fr_Gn[['N','Stage','Primary.Site','Tumor.Size', 'Num.Mutated.Genes','Num.Mutations']])\n",
        "print(cl_gn['Stage'].unique())\n",
        "\n",
        "print(cl_gn['Primary.Site'].unique())\n",
        "\n",
        "print(cl_gn['Histology'].unique())\n",
        "\n",
        "print(cl_gn['Gene'].unique())\n",
        "\n",
        "print(cl_gn['Tumor.Size'].unique())\n",
        "\n"
      ],
      "metadata": {
        "id": "yKbJmliF_ST2",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "75eaf8cf-8c8c-43c8-8c77-ee4caa96ec08"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "['IV' 'IIIA' 'IA' 'IVB' 'IIA' 'IIIB' 'IIB' 'IB' '1B']\n",
            "['Left Lower Lobe' 'Right Upper Lobe' 'Left Hilar' 'Right Hilar'\n",
            " 'Left Upper Lobe' 'Right Lower Lobe' 'Both Lung' 'Right Middle Lobe'\n",
            " 'Righ Upper Lobe']\n",
            "['Squamous cell carcinoma' 'Adenocarcinoma' 'Large-cell carcinoma']\n",
            "['AKT1' 'SMO' 'STK11' 'CDKN2A' 'KRAS_Col1' 'APC' 'GNAS' 'PDGFRB' 'MET'\n",
            " 'MSH2' 'ALK_Col2' 'FGFR1' 'PIK3CB' 'CTNNB1' 'TSC2' 'SMARCB1' 'NF_Col3'\n",
            " 'TP53_Col1' 'EGFR' 'ATM_Col1' 'ERBB3' 'NF_Col2' 'NOTCH1' 'MSH6' 'PTEN'\n",
            " 'ALK_Col1' 'FBXW7' 'NTRK1' 'POLD_Col2' 'TERT' 'BRAF' 'HNF1A' 'NF_Col5'\n",
            " 'ERBB4' 'PIK3CA' 'DNMT3A' 'ESR1']\n",
            "[ 1.4  0.   1.5  5.5  2.   4.   3.6  1.9  4.4  9.  10.   1.8  8.   3.5\n",
            "  2.5  8.5  5.3  1.6  5.4  1. ]\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "### 3. Correcting Data Types\n"
      ],
      "metadata": {
        "id": "LUqlwYX88Lz9"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "# Convert 'Outcome' column to integers\n",
        "#cl_gn.replace({'Outcome': {0:'Dead',1:'Alive'}})\n",
        "\n",
        "#cl_gn.replace({'Outcome': {'UNK': 0,'2a':2}})\n",
        "#cl_gn.head()"
      ],
      "metadata": {
        "id": "7u1VSpc78KeN"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "#print(cl_gn[['Outcome']])"
      ],
      "metadata": {
        "id": "Mq9EOU0SCwnJ"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "### 3. Renaming Columns"
      ],
      "metadata": {
        "id": "Rdmx3ZESHWQA"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "cl_gn.rename(columns={'T':'Tumor_Stage','N':'Nu_of_metastasis','M':'distant_metastases'}, inplace=True)"
      ],
      "metadata": {
        "id": "WxEEXNi8HWxy"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "cl_gn.set_index('ID', inplace= True)"
      ],
      "metadata": {
        "id": "GTN7kjb0MU99"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "cl_gn.head(5)"
      ],
      "metadata": {
        "id": "W5ptncO5d0mh",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 344
        },
        "outputId": "12bbedf6-f23d-4395-f525-26051f9d30f6"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "   Outcome  Survival.Months  Age  Grade  Num.Primaries Tumor_Stage  \\\n",
              "ID                                                                   \n",
              "1    Alive              9.0   67      4              0         UNK   \n",
              "2     Dead             19.0   73      2              0         UNK   \n",
              "3     Dead             13.0   72      3              0           2   \n",
              "4     Dead             15.0   69      9              1          1a   \n",
              "5     Dead             10.0   76      9              0         UNK   \n",
              "\n",
              "    Nu_of_metastasis  distant_metastases  Radiation Stage      Primary.Site  \\\n",
              "ID                                                                            \n",
              "1                2.0                 0.0          0    IV   Left Lower Lobe   \n",
              "2                2.0                 0.0          5    IV  Right Upper Lobe   \n",
              "3                2.0                 0.0          0  IIIA  Right Upper Lobe   \n",
              "4                0.0                 1.0          0    IA  Right Upper Lobe   \n",
              "5                0.0                 0.0          0  IIIA        Left Hilar   \n",
              "\n",
              "                  Histology  Tumor.Size  Num.Mutated.Genes  Num.Mutations  \\\n",
              "ID                                                                          \n",
              "1   Squamous cell carcinoma         1.4                  8              8   \n",
              "2            Adenocarcinoma         0.0                  2              2   \n",
              "3            Adenocarcinoma         1.5                  1              1   \n",
              "4            Adenocarcinoma         0.0                  4              4   \n",
              "5      Large-cell carcinoma         0.0                  3              3   \n",
              "\n",
              "         Gene  \n",
              "ID             \n",
              "1        AKT1  \n",
              "2         SMO  \n",
              "3       STK11  \n",
              "4      CDKN2A  \n",
              "5   KRAS_Col1  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-783ebbc2-6c12-4df2-8d10-73b86d8728c1\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Outcome</th>\n",
              "      <th>Survival.Months</th>\n",
              "      <th>Age</th>\n",
              "      <th>Grade</th>\n",
              "      <th>Num.Primaries</th>\n",
              "      <th>Tumor_Stage</th>\n",
              "      <th>Nu_of_metastasis</th>\n",
              "      <th>distant_metastases</th>\n",
              "      <th>Radiation</th>\n",
              "      <th>Stage</th>\n",
              "      <th>Primary.Site</th>\n",
              "      <th>Histology</th>\n",
              "      <th>Tumor.Size</th>\n",
              "      <th>Num.Mutated.Genes</th>\n",
              "      <th>Num.Mutations</th>\n",
              "      <th>Gene</th>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>ID</th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>Alive</td>\n",
              "      <td>9.0</td>\n",
              "      <td>67</td>\n",
              "      <td>4</td>\n",
              "      <td>0</td>\n",
              "      <td>UNK</td>\n",
              "      <td>2.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>IV</td>\n",
              "      <td>Left Lower Lobe</td>\n",
              "      <td>Squamous cell carcinoma</td>\n",
              "      <td>1.4</td>\n",
              "      <td>8</td>\n",
              "      <td>8</td>\n",
              "      <td>AKT1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>Dead</td>\n",
              "      <td>19.0</td>\n",
              "      <td>73</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>UNK</td>\n",
              "      <td>2.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>5</td>\n",
              "      <td>IV</td>\n",
              "      <td>Right Upper Lobe</td>\n",
              "      <td>Adenocarcinoma</td>\n",
              "      <td>0.0</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>SMO</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>Dead</td>\n",
              "      <td>13.0</td>\n",
              "      <td>72</td>\n",
              "      <td>3</td>\n",
              "      <td>0</td>\n",
              "      <td>2</td>\n",
              "      <td>2.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>IIIA</td>\n",
              "      <td>Right Upper Lobe</td>\n",
              "      <td>Adenocarcinoma</td>\n",
              "      <td>1.5</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>STK11</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>Dead</td>\n",
              "      <td>15.0</td>\n",
              "      <td>69</td>\n",
              "      <td>9</td>\n",
              "      <td>1</td>\n",
              "      <td>1a</td>\n",
              "      <td>0.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>0</td>\n",
              "      <td>IA</td>\n",
              "      <td>Right Upper Lobe</td>\n",
              "      <td>Adenocarcinoma</td>\n",
              "      <td>0.0</td>\n",
              "      <td>4</td>\n",
              "      <td>4</td>\n",
              "      <td>CDKN2A</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5</th>\n",
              "      <td>Dead</td>\n",
              "      <td>10.0</td>\n",
              "      <td>76</td>\n",
              "      <td>9</td>\n",
              "      <td>0</td>\n",
              "      <td>UNK</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>IIIA</td>\n",
              "      <td>Left Hilar</td>\n",
              "      <td>Large-cell carcinoma</td>\n",
              "      <td>0.0</td>\n",
              "      <td>3</td>\n",
              "      <td>3</td>\n",
              "      <td>KRAS_Col1</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-783ebbc2-6c12-4df2-8d10-73b86d8728c1')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-783ebbc2-6c12-4df2-8d10-73b86d8728c1 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-783ebbc2-6c12-4df2-8d10-73b86d8728c1');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-ce525d60-3096-48a1-b99b-69acf9356eb4\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-ce525d60-3096-48a1-b99b-69acf9356eb4')\"\n",
              "            title=\"Suggest charts.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-ce525d60-3096-48a1-b99b-69acf9356eb4 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 25
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Drop original columns that are encoded\n",
        "#cl_gn.drop(['Stage', 'Primary.Site'],axis=1)\n"
      ],
      "metadata": {
        "id": "wvw_NQ-5SU8d"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "## Save the file to google drive"
      ],
      "metadata": {
        "id": "0MzTYQ6abdEO"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "from google.colab import drive\n",
        "drive.mount('/cl_gn', force_remount=True)\n",
        "path = '/cl_gn.csv'"
      ],
      "metadata": {
        "id": "AhguquN0k-_t",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "e1ca1bd3-d0b7-41e0-de2f-c354eabddd99"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Mounted at /cl_gn\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "with open(path, 'w', encoding = 'utf-8-sig') as f:\n",
        "  cl_gn.to_csv(f)"
      ],
      "metadata": {
        "id": "vqZB77csqv65"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [],
      "metadata": {
        "id": "TCCmxX0EdDFj"
      },
      "execution_count": null,
      "outputs": []
    }
  ]
}